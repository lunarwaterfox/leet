#include <gtest/gtest.h>
#include <Leet0999.hpp>
#include <vector>

using namespace Leet0999;

TEST(Leet0999, example1) {
    Solution s;

    vector<vector<char> > v = {{'.','.','.','.','.','.','.','.'},
                               {'.','.','.','p','.','.','.','.'},
                               {'.','.','.','R','.','.','.','p'},
                               {'.','.','.','.','.','.','.','.'},
                               {'.','.','.','.','.','.','.','.'},
                               {'.','.','.','p','.','.','.','.'},
                               {'.','.','.','.','.','.','.','.'},
                               {'.','.','.','.','.','.','.','.'}};

    int n = s.numRookCaptures(v);
    ASSERT_TRUE(n == 3);
}


TEST(Leet0999, example2) {
    Solution s;

    vector<vector<char> > v = {{'.','.','.','.','.','.','.','.'},
                               {'.','p','p','p','p','p','.','.'},
                               {'.','p','p','B','p','p','.','.'},
                               {'.','p','B','R','B','p','.','.'},
                               {'.','p','p','B','p','p','.','.'},
                               {'.','p','p','p','p','p','.','.'},
                               {'.','.','.','.','.','.','.','.'},
                               {'.','.','.','.','.','.','.','.'}};

    int n = s.numRookCaptures(v);
    ASSERT_TRUE(n == 0);
}


TEST(Leet0999, example3) {
    Solution s;

    vector<vector<char> > v = {{'.','.','.','.','.','.','.','.'},
                               {'.','.','.','p','.','.','.','.'},
                               {'.','.','.','p','.','.','.','.'},
                               {'p','p','.','R','.','p','B','.'},
                               {'.','.','.','.','.','.','.','.'},
                               {'.','.','.','B','.','.','.','.'},
                               {'.','.','.','p','.','.','.','.'},
                               {'.','.','.','.','.','.','.','.'}};

    int n = s.numRookCaptures(v);
    ASSERT_TRUE(n == 3);
}
